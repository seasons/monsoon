# Javascript Node CircleCI 2.1 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

orbs:
  node: circleci/node@4.5.1
  docker: circleci/docker@1.6.0

jobs:
  test-unit:
    docker:
      - image: postgres:12.6-alpine
    auth:
      username: dmonay
      password: $DOCKERHUB_PASSWORD # context / project UI env-var reference

    working_directory: ~/monsoon

    steps:
      - checkout

      - run:
          name: Install Node Version Manager
          command: |
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            nvm install v14.17.4
            nvm alias default v14.17.4
            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo "[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"" >> $BASH_ENV

      - node/install-yarn

      - node/install-packages:
          pkg-manager: yarn

      - docker/install-docker

      - docker/install-docker-compose

      - run:
          command: docker-compose up -d
          name: Start up docker containers

      - run:
          command: sleep 20
          name: Wait for containers to fully spin up

      - run:
          command: yarn prisma:deploy
          name: Deploy Prisma service

      - run:
          command: yarn test
          name: Run unit tests

  test-integration:
    machine: true
    working_directory: ~/monsoon
    steps:
      - checkout

      - run:
          name: Install Node Version Manager
          command: |
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            nvm install v14.17.4
            nvm alias default v14.17.4
            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo "[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"" >> $BASH_ENV

      - node/install-yarn

      - node/install-packages:
          pkg-manager: yarn

      - docker/install-docker

      - docker/install-docker-compose

      - run:
          command: docker-compose up -d
          name: Start up docker containers

      - run:
          command: sleep 20
          name: Wait for containers to fully spin up

      - run:
          command: yarn prisma:deploy
          name: Deploy Prisma service

      - run:
          command: yarn build
          name: Compile so we can run the next cmd

      - run:
          command: node bin/cli.js spp local staging -f
          name: Clone staging data into local Postgres DB

      - run:
          command: node bin/cli.js ctu --email integration_test_ci@seasons.nyc --password Seasons2020 --prisma local --roles Customer Admin --aid 60e4ac2aaf20ac0069155156 --dbo
          name: Generate user for integration test

      - run:
          command: node scripts/esbuild.watcher.js
          name: Start server locally to run integration tests against

      - run:
          command: sleep 20
          name: Wait for server to spin up

      - run:
          command: yarn test:e2e
          name: Run integration test suite

workflows:
  run_all_tests:
    jobs:
      - test-unit
      - test-integration
