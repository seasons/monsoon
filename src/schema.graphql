type Query {
  me: User
}

type Mutation {
  signup(email: String!, password: String!, name: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  email: String!
  name: String!
  bag: Bag!
}

type Bag {
  id: ID!
}

enum Tier {
  Tier0
  Tier1
  Tier2
  Niche
  Upcoming
  Retro
  Boutique
}

enum Size {
  ExtraSmall
  Small
  Medium
  Large
  ExtraLarge
}

enum Material {
  Cotton
  Mesh
  Nylon
  Denim
  Leather
  Fur
  Polyamide
  Feather
  Polyester
}

enum Department {
  Clothes
  Bags
  Accessories
  Jewelry
}

enum Category {
  Outerwear
  Tops
}

enum Color {
  Black
  Red
  White
  Silver
  Gray
  Maroon
  Yellow
  Olive
  Lime
  Green
  Aqua
  Teal
  Blue
  Navy
  Purple
  Salmon
  Gold
  Orange
  Turquoise
  RoyalBlue
  Magenta
  Lavender
  Ivory
  MintCream
  Beige
  Brown
  Tan
  LightBlue
  HotPink
  Pink
  DarkGray
}

type Image {
  href: String
  height: Int
  width: Int
  imageURL: String
  originalHeight: Int
  originalWidth: Int

  resized(width: Int, height: Int, version: [String]): ResizedImageUrl
}

type ResizedImageUrl {
  factor: Float
  width: Int
  height: Int
  url: String
}
