type Query {
  chargebeeCheckout(
    planID: PlanID!
    userIDHash: String!
  ): ChargebeeHostedPagePayload
  chargebeeUpdatePaymentPage: ChargebeeHostedPagePayload
    @hasRole(roles: [Customer])
  paymentPlans(
    where: PaymentPlanWhereInput
    orderBy: PaymentPlanOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [PaymentPlan]
}

type Mutation {
  updateResumeDate(date: DateTime): Boolean @hasRole(roles: [Customer])
  removeScheduledPause(subscriptionID: String!): Boolean
    @hasRole(roles: [Customer])
  pauseSubscription(subscriptionID: String!): Boolean
    @hasRole(roles: [Customer])
  resumeSubscription(subscriptionID: String!, date: DateTime): Boolean
    @hasRole(roles: [Customer])
  acknowledgeCompletedChargebeeHostedCheckout(
    hostedPageID: String!
  ): BillingInfoPayload
  refundInvoice(input: RefundInvoiceInput): Boolean! @hasRole(roles: [Admin])
}

enum CreditNoteReasonCodeInput {
  ProductUnsatisfactory
  ServiceUnsatisfactory
  OrderChange
  OrderCancellation
  Waiver
  Other
}

enum CreditNoteReasonCode {
  SubscriptionChange
  ProductUnsatisfactory
  ServiceUnsatisfactory
  OrderChange
  OrderCancellation
  Waiver
  Other
}

enum CreditNoteStatus {
  Adjusted
  Refunded
  RefundDue
  Voided
}

enum TransactionStatus {
  InProgress
  Success
  Voided
  Failure
  Timeout
  NeedsAttention
}

enum InvoiceStatus {
  Paid
  Posted
  PaymentDue
  NotPaid
  Voided
  Pending
}

enum TransactionType {
  Authorization
  Payment
  Refund
  PaymentReversal
}

enum PlanID {
  AllAccess
  Essential
}

type Invoice {
  id: String!
  subscriptionId: String
  recurring: Boolean
  status: InvoiceStatus
  closingDate: DateTime
  dueDate: DateTime
  amount: Int
  transactions: [Transaction]
  creditNotes: [CreditNote]
}

type Transaction {
  id: String!
  amount: Int
  lastFour: String
  date: DateTime
  status: TransactionStatus
  type: TransactionType!
  settledAt: DateTime
}

type CreditNote {
  id: String!
  reasonCode: CreditNoteReasonCode
  date: DateTime
  total: Int
  status: CreditNoteStatus
}

type ChargebeePlanPayload {
  plans: [Plan]
}

type BillingInfoPayload {
  billingInfo: BillingInfo
  plan: Plan
}

type ChargebeeHostedPagePayload {
  created_at: DateTime!
  embed: Boolean!
  expires_at: Int!
  id: String!
  object: String!
  resource_version: DateTime!
  state: String!
  type: String!
  updated_at: DateTime!
  url: String!
}

input RefundInvoiceInput {
  invoiceId: String!
  refundAmount: Int
  comment: String
  customerNotes: String
  reasonCode: CreditNoteReasonCodeInput
}

type PaymentPlan {
  id: String!
  description: String
  planID: String!
  status: String
  name: String
  price: Int
}
