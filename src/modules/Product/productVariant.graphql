type Query {
  productVariantsConnection(
    where: ProductVariantWhereInput
    orderBy: ProductVariantOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    personalizedForCurrentUser: Boolean
  ): ProductVariantConnection!
  generatedVariantSKUs(input: ProductVariantSKUsInput!): [String!]

  bottomSize(where: BottomSizeWhereUniqueInput!): BottomSize
  bottomSizes(
    where: BottomSizeWhereInput
    orderBy: BottomSizeOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [BottomSize]!
  productVariant(where: ProductVariantWhereUniqueInput!): ProductVariant
  size(where: SizeWhereUniqueInput!): Size
  sizes(
    where: SizeWhereInput
    orderBy: SizeOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Size]!
  sizesConnection(
    where: SizeWhereInput
    orderBy: SizeOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): SizeConnection!
  topSize(where: TopSizeWhereUniqueInput!): TopSize
  topSizes(
    where: TopSizeWhereInput
    orderBy: TopSizeOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [TopSize]!
}

type Mutation {
  addProductVariantWant(variantID: ID!): ProductVariantWant!
    @hasRole(roles: [Customer])
    @deprecated(reason: "replaced with upsertRestockNotification")
  upsertRestockNotification(
    variantID: ID!
    shouldNotify: Boolean!
  ): ProductVariantWant! @hasRole(roles: [Customer])
  updateProductVariant(input: UpdateVariantInput!): ProductVariant
    @hasRole(roles: [Admin])
  upsertProductVariants(
    productID: ID!
    inputs: [UpsertVariantInput!]!
  ): [ProductVariant!] @hasRole(roles: [Admin])
  addPhysicalProductsToVariant(variantID: ID, count: Int): [ProductVariant!]
}

type ProductVariantPrice {
  id: ID!
  retailPrice: Float

  # ExternalShopifyProductVariant is the source of truth.
  buyNewPrice: Float
  buyNewAvailableForSale: Boolean

  # Product is the source of truth.
  buyNewEnabled: Boolean!

  # PhysicalProduct is the source of truth.
  buyUsedPrice: Float
  buyUsedEnabled: Boolean!
  buyUsedAvailableForSale: Boolean
}

type Size {
  id: ID!
  slug: String!
  productType: ProductType
  top: TopSize
  bottom: BottomSize
  display: String!
}

type ShopifyProductVariant {
  id: ID!
  externalId: String
  cachedPrice: Float
  cachedAvailableForSale: Boolean
  cacheExpiresAt: DateTime
}

type ProductVariant {
  id: ID!
  sku: String
  color: Color!
  size: String @deprecated(reason: "replaced with displayShort")
  displayShort: String
  displayLong: String
  internalSize: Size
  manufacturerSizes(
    where: SizeWhereInput
    orderBy: SizeOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Size!]
  weight: Float
  height: Float
  productID: String!
  product: Product!
  physicalProducts(
    where: PhysicalProductWhereInput
    orderBy: PhysicalProductOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [PhysicalProduct!]
  total: Int!
  reservable: Int!
  reserved: Int!
  shopifyProductVariant: ShopifyProductVariant
  price: ProductVariantPrice!
  retailPrice: Float @deprecated(reason: "replaced with price.retailPrice")
  nonReservable: Int!
  hasRestockNotification: Boolean!
  isWanted: Boolean! @deprecated(reason: "replaced with hasRestockNotification")
  createdAt: DateTime!
  updatedAt: DateTime!

  # Based on logged in customer
  isSaved: Boolean!
  isInBag: Boolean!
  purchased: Boolean!
}

input ProductVariantPriceInput {
  buyUsedPrice: Float
  buyUsedEnabled: Boolean!
  buyNewEnabled: Boolean!
}

input ShopifyProductVariantInput {
  externalId: String
}

input UpsertVariantInput {
  sku: String!
  internalSizeName: String!
  manufacturerSizeNames: [String!]
  # Top Size values
  sleeve: Float
  shoulder: Float
  chest: Float
  neck: Float
  length: Float
  # Bottom Size values
  bottomSizeType: BottomSizeType
  waist: Float
  rise: Float
  hem: Float
  inseam: Float
  weight: Float
  total: Int!
  physicalProducts: [UpsertPhysicalProductInput!]!
  price: ProductVariantPriceInput
  shopifyProductVariant: ShopifyProductVariantInput
}

input UpdateVariantInput {
  id: ID!
  manufacturerSizeNames: [String!]
  productType: ProductType!
  weight: Float
  # Top Size values
  sleeve: Float
  shoulder: Float
  chest: Float
  neck: Float
  length: Float
  # Bottom Size values
  waist: Float
  rise: Float
  hem: Float
  inseam: Float
  price: ProductVariantPriceInput
  shopifyProductVariant: ShopifyProductVariantInput
}

input ProductVariantSKUsInput {
  brandID: ID!
  colorCode: String!
  sizeNames: [String!]!
}
