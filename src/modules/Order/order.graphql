# import AddressInput from "../Customer/customer.graphql"
type Mutation {
  createDraftedOrder(input: CreateDraftedOrderInput!): Order!
  submitOrder(input: SubmitOrderInput!): Order! @hasRole(roles: [Customer])
  updateOrderStatus(orderID: ID!, status: OrderStatus!): Order!
    @hasRole(roles: [Customer, Admin])
}

type Query {
  order(where: OrderWhereUniqueInput!): Order @cacheControl(maxAge: 0)
  orders(
    where: OrderWhereInput
    orderBy: OrderOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Order]! @cacheControl(maxAge: 0)
  ordersConnection(
    where: OrderWhereInput
    orderBy: OrderOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): OrderConnection! @cacheControl(maxAge: 0)
}

enum OrderLineItemRecordType {
  PhysicalProduct
  ProductVariant
  ExternalProduct
  Package
  EarlySwap
  Fee
  Total
  Credit
  PurchaseCredit
}

type Order {
  id: ID!
  customer: Customer!
  sentPackage: Package
  lineItems(
    where: OrderLineItemWhereInput
    orderBy: OrderLineItemOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [OrderLineItem!]
  orderNumber: String!
  type: OrderType!
  status: OrderStatus!
  subTotal: Int
  total: Int
  cancelReason: OrderCancelReason
  couponID: String
  paymentStatus: OrderPaymentStatus!
  note: String
  createdAt: DateTime!
  updatedAt: DateTime!
  # Computed fields
  salesTaxTotal: Int!
}

interface LineItemInterface {
  id: ID!
  name: String
  price: Int!
}

type OrderLineItem implements LineItemInterface {
  id: ID!
  recordID: ID
  recordType: OrderLineItemRecordType!
  needShipping: Boolean
  taxRate: Float
  taxName: String
  taxPercentage: Float
  taxPrice: Int
  price: Int!
  name: String
  currencyCode: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  # Computed fields
  productVariant: ProductVariant
  physicalProduct: PhysicalProduct
}

input CreateDraftedOrderGuestInput {
  email: String!
  shippingAddress: AddressInput!
}
input CreateDraftedOrderInput {
  orderType: OrderType!
  # FIXME: Can eventually remove productVariantID as it's deprecated
  productVariantID: ID
  productVariantIds: [ID!]
  guest: CreateDraftedOrderGuestInput
}

input SubmitOrderInput {
  orderID: ID!
}
