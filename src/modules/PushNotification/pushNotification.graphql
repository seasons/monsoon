type Query {
  pushNotificationReceipt(
    where: PushNotificationReceiptWhereUniqueInput! @cacheControl(maxAge: 0)
  ): PushNotificationReceipt @hasRole(roles: [Admin])
  pushNotificationReceipts(
    where: PushNotificationReceiptWhereInput
    orderBy: PushNotificationReceiptOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [PushNotificationReceipt]!
    @hasRole(roles: [Admin])
    @cacheControl(maxAge: 0)
  pushNotificationReceiptsConnection(
    where: PushNotificationReceiptWhereInput
    orderBy: PushNotificationReceiptOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): PushNotificationReceiptConnection!
    @hasRole(roles: [Admin])
    @cacheControl(maxAge: 0)
}

type Mutation {
  pushNotifyUser(
    where: UserWhereUniqueInput
    data: PushNotifDataInput
  ): PushNotificationReceipt @hasRole(roles: [Marketer])
  pushNotifyUsers(
    where: CustomerWhereInput
    data: PushNotifDataInput
  ): [PushNotificationReceipt]! @hasRole(roles: [Marketer])
  pushNotifyInterest(
    interest: PushNotificationInterest
    data: PushNotifDataInput
    debug: Boolean
  ): PushNotificationReceipt @hasRole(roles: [Marketer])
}

input PushNotifDataInput {
  title: String
  body: String!
  route: AppRoute
  uri: String
  record: RecordParamsInput
}

input RecordParamsInput {
  id: String!
  slug: String!
}

enum PushNotificationInterest {
  SeasonsGeneralNotifications
}

enum AppRoute {
  BagStack
  Faq
  Webview
  CurrentRotation
  Reservation
  Browse
  Home
  Brand
  AccountStack
  PaymentAndShipping
  PersonalPreferences
  ProductRequest
  Product
  Modal
}
