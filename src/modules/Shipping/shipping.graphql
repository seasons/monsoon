type Query {
  package(where: PackageWhereUniqueInput!): Package
    @hasRole(roles: [Admin])
    @cacheControl(maxAge: 0)
  packages(
    where: PackageWhereInput
    orderBy: PackageOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Package]! @hasRole(roles: [Admin]) @cacheControl(maxAge: 0)
  packagesConnection(
    where: PackageWhereInput
    orderBy: PackageOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): PackageConnection! @hasRole(roles: [Admin]) @cacheControl(maxAge: 0)
  shippingMethods(
    where: ShippingMethodWhereInput
    orderBy: ShippingMethodOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [ShippingMethod]!
}

type Mutation {
  validateAddress(input: ValidateAddressInput!): ValidationPayload!
}

type TimeWindow {
  id: ID!
  startTime: Int
  endTime: Int
  display: String
}

type ShippingMethod {
  id: ID!
  code: ShippingCode!
  displayText: String!
  timeWindows: [TimeWindow!]!
  position: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

input AddressInput {
  city: String!
  postalCode: String!
  state: String!
  street1: String!
  street2: String
}

input ValidateAddressInput {
  location: LocationCreateInput!
  email: String!
}

type ValidationPayload {
  isValid: Boolean!
  code: String
  text: String
}
