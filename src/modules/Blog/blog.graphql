type Query {
  blogPost(where: BlogPostWhereUniqueInput!): BlogPost
    @cacheControl(maxAge: 1000)
  blogPosts(
    where: BlogPostWhereInput
    orderBy: BlogPostOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    count: Int
  ): [BlogPost]! @cacheControl(maxAge: 1000)
  blogPostsConnection(
    where: BlogPostWhereInput
    orderBy: BlogPostOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): BlogPostConnection! @cacheControl(maxAge: 1000)
}

type BlogCollection @cacheControl(maxAge: 1000) {
  id: ID!
  slug: String!
  url: String
  fields: Json
  posts: [BlogPost!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type BlogPost @cacheControl(maxAge: 1000) {
  id: ID!
  slug: String!
  name: String
  body: String
  summary: String
  thumbnailURL: String
  imageURL: String
  imageAlt: String
  url: String
  tags: [String]
  createdAt: DateTime!
  updatedAt: DateTime!
  publishedOn: DateTime!
  author: String
  category: String
  image: Image
}
